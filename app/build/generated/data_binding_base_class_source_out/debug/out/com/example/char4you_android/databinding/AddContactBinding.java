// Generated by view binder compiler. Do not edit!
package com.example.char4you_android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.char4you_android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddContactBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView addContact;

  @NonNull
  public final Button btnAddContact;

  @NonNull
  public final EditText contactIdn;

  @NonNull
  public final EditText nickName;

  @NonNull
  public final EditText serverAddress;

  @NonNull
  public final ImageView settingsButton;

  private AddContactBinding(@NonNull ConstraintLayout rootView, @NonNull TextView addContact,
      @NonNull Button btnAddContact, @NonNull EditText contactIdn, @NonNull EditText nickName,
      @NonNull EditText serverAddress, @NonNull ImageView settingsButton) {
    this.rootView = rootView;
    this.addContact = addContact;
    this.btnAddContact = btnAddContact;
    this.contactIdn = contactIdn;
    this.nickName = nickName;
    this.serverAddress = serverAddress;
    this.settingsButton = settingsButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddContactBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddContactBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_contact, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddContactBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_contact;
      TextView addContact = ViewBindings.findChildViewById(rootView, id);
      if (addContact == null) {
        break missingId;
      }

      id = R.id.btnAddContact;
      Button btnAddContact = ViewBindings.findChildViewById(rootView, id);
      if (btnAddContact == null) {
        break missingId;
      }

      id = R.id.contactIdn;
      EditText contactIdn = ViewBindings.findChildViewById(rootView, id);
      if (contactIdn == null) {
        break missingId;
      }

      id = R.id.nickName;
      EditText nickName = ViewBindings.findChildViewById(rootView, id);
      if (nickName == null) {
        break missingId;
      }

      id = R.id.serverAddress;
      EditText serverAddress = ViewBindings.findChildViewById(rootView, id);
      if (serverAddress == null) {
        break missingId;
      }

      id = R.id.settings_button;
      ImageView settingsButton = ViewBindings.findChildViewById(rootView, id);
      if (settingsButton == null) {
        break missingId;
      }

      return new AddContactBinding((ConstraintLayout) rootView, addContact, btnAddContact,
          contactIdn, nickName, serverAddress, settingsButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
